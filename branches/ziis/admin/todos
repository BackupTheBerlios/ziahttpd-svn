todos


. think you should not have a while ... in resource generation
	(besides the loop in documentgenerator)
. add the is_content_dynamic() method, in order to
	tell if the response body must be chunked
. resource creation factory
. resource generation loop
. integrate resources + main loop in mod_resource
	-> byfly
	-> file: implement a seek pointer
	-> cgi


. init the resource with an ioutput, so that it can send
	instead of a thr_slot
. function to handle error code sending prior to be in the
	document generator + usable in it
. this is the document generator that creates the resource

. remove ioslot (?)
	-> integrate it into the connection module

. handle predata

. think about prefetched buffer for resource
. see their hook and where they are called
. migrate the two function in the document generator

. check the ibuffer class
. implement hooks and instanciation @good times
. pass session pointer to constructor
. resource manager in GenerateDocument
. implement the ReadPostEntity method
. stream modifier module (+ prio)
. compressor module
. implement a timeouter in the connection module (array of io slot)


. implement the send* method
. readpostentity method
	-> internally take into account the body size
. implement error page sending + http header


config file should handle markers for modules
	-> mime types...
error when the module is not correctly loaded
	-> is in the list, but ... (invalid path)


1) implement module manager
	. think about involvures -> should be reloadable
	. should have a data aera for the module (void*)
	. implement the reload method according to conf file


toremember
-> the module may be plugged in another server
-> the server should be reloadable
