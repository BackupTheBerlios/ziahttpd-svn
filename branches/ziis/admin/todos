todos


. sending_buffer


. impleemnt the modifier list in sendVBuffer

. remove the system thread -> io_thread
. remove resource from the server core

. get local name -> uri to local
> resource creation + read  conf
. chunk generation


for the ReadPostEntity()
	-> take care of reading from the mbuffer, to get the prefeteched data


. handle prefetched datas...
. resource creation factory


. remove ioslot (?)
	-> integrate it into the connection module

. handle predata

. think about prefetched buffer for resource
. see their hook and where they are called
. migrate the two function in the document generator

. check the ibuffer class
. implement hooks and instanciation @good times
. pass session pointer to constructor
. resource manager in GenerateDocument
. implement the ReadPostEntity method
. stream modifier module (+ prio)
. compressor module
. implement a timeouter in the connection module (array of io slot)


. readpostentity method
	-> internally take into account the body size
. implement error page sending + http header


config file should handle markers for modules
	-> mime types...
error when the module is not correctly loaded
	-> is in the list, but ... (invalid path)


1) implement module manager
	. think about involvures -> should be reloadable
	. should have a data aera for the module (void*)
	. implement the reload method according to conf file


toremember
-> the module may be plugged in another server
-> the server should be reloadable


todos
-> ensure limit on network input sizes