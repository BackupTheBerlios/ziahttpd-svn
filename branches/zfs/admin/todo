@fixme
[ ] linux, 100% cpu on start
[?] leaks from the mline
[ ] resize from generate() data


@tests
[ ] play with static sizes to raise bugs
[ ] test leaks on handle, memory
[ ] test if resources(threads, processes) are reaped
[ ] test invalid control path, allocation failure, function errors...
[ ] compile with the efence lib on unix
[ ] try to get purify and track leaks...
[ ] test the timeouting
[ ] test post on cgi
[ ] test put on files
[ ] handle issues such as:
	-> memory allocation errors
	-> file too large
	-> buggy processes
	-> access permission failure
	-> strange control paths
	-> resource leaks on failure control paths
	-> clients deconnections
	-> ...


@todos
[ ] reset handles in sysapi and check before releasing
[ ] implement error in resource factory -> exception handling (not safe?)
[ ] chrooting of the server
[ ] implement a correct body buffer production from http.cc
[ ] clean the resource interface, some function unused(is_input, is_output...)

@whereami
[ ] test the put method
[ ] test on linux
[ ] clean the resource
 
@optimizations
[ ] static linking
[ ] search for common called code and optim -> buf = buffer(...);


@ideas
[ ] abstraction above the socket(read->buffer_socket and then socket), to handle probleme with mline and buffering
[ ] abstraction above io operation -> mline is not ok
	typedef struct
	{
          buffer;
	  handle;
	  time...;
	  in_progress...
	} ioport_t
